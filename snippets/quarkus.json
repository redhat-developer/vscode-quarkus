{
	"Quarkus - new resource class": {
		"prefix": "qrc",
		"body": [
			"package ${1:packagename};",
			"",
			"import javax.ws.rs.GET;",
			"import javax.ws.rs.Path;",
			"import javax.ws.rs.Produces;",
			"import javax.ws.rs.core.MediaType;",
			"",
			"@Path(\"${2:/path}\")",
			"public class ${TM_FILENAME_BASE} {",
			"",
			"\t@GET",
			"\t@Produces(MediaType.TEXT_PLAIN)",
			"\tpublic String ${3:methodname}() {",
			"\t\treturn \"hello\";",
			"\t}",
			"}"
		],
		"description": "Quarkus REST resource class"
	},
	"Quarkus - new resource method": {
		"prefix": "qrm",
		"body": [
			"@GET",
			"@Produces(MediaType.TEXT_PLAIN)",
			"public String ${1:methodname}() {",
			"\treturn \"hello\";",
			"}"
		],
		"description": "Quarkus REST resource method"
	},
	"Quarkus - new test resource class": {
		"prefix": "qtrc",
		"body": [
			"package ${1:packagename};",
			"",
			"import io.quarkus.test.junit.QuarkusTest;",
			"import org.junit.jupiter.api.Test;",
			"",
			"import static io.restassured.RestAssured.given;",
			"import static org.hamcrest.CoreMatchers.is;",
			"",
			"@QuarkusTest",
			"public class ${TM_FILENAME_BASE} {",
			"",
			"\t@Test",
			"\tpublic void test${2:methodname}() {",
			"\t\tgiven()",
			"\t\t.when().get(\"${3:/path}\")",
			"\t\t.then()",
			"\t\t\t.statusCode(200)",
			"\t\t\t.body(is(\"hello\"));",
			"\t}",
			"",
			"}"
		],
		"description": "Quarkus test resource class"
	},
	"Quarkus - new native test resource class": {
		"prefix": "qntrc",
		"body": [
			"package ${1:packagename};",
			"",
			"import io.quarkus.test.junit.SubstrateTest;",
			"",
			"@SubstrateTest",
			"public class ${TM_FILENAME_BASE} extends ${2:${TM_FILENAME_BASE/^Native(.*)IT/$1/}Test} {",
			"",
			"\t// Execute the same tests, but in native mode.",
			"}"
		],
		"description": "Quarkus native test resource class"
	}
}